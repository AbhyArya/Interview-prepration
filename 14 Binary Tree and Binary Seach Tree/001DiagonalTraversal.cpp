#include<bits/stdc++.h>
using namespace std;

// GFG - Diagonal Traversal
class Solution{
    vector<int> diagonal(Node *root){
    vector<int> ans;
    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        int size = q.size();
        for(int i = 0; i<size; i++){
                auto temp = q.front();
                q.pop();
            while(temp){
                    if(temp->left)
                        q.push(temp->left);
                    ans.push_back(temp->data);
                    temp = temp->right;
            }
        }
    }
    return ans;
    }
};


// GFG - Diagonal Sum In BinaryTree

struct Node{ // This generated by me to remove error in code
    int data;
    struct Node *left;
    struct Node *right;
};


vector <int> diagonalSum(Node* root) {
    vector<int> ans;
    queue<Node*> q;
    q.push(root);
    while(!q.empty()){
        int sum = 0;
        int n = q.size();
        for(int i = 0;i<n; i++){
            Node * temp = q.front();
            q.pop();
            while(temp){
                if(temp->left){
                    q.push(temp->left);
                }
                sum+=temp->data;
                temp = temp->right;
            }
        }
        ans.push_back(sum);
    }
    return ans;
}