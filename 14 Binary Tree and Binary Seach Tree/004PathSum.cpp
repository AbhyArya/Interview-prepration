#include<bits/stdc++.h>
using namespace std;

// LeetCode - 113


struct TreeNode { // This generated by me to remove error in code
    int val;
    TreeNode *left;
    TreeNode *right;
    TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
};

class Solution {
    void preorder(TreeNode* root, int targetSum, vector<int> &temp,vector<vector<int>>& ans){
        if(!root)
            return;
        if(!root->left && !root->right){
            if(targetSum-root->val == 0){
                temp.push_back(root->val);
                ans.push_back(temp);
                temp.pop_back();
            }
            return;
        }
        temp.push_back(root->val);
        preorder(root->left, targetSum-root->val, temp, ans);
        preorder(root->right, targetSum-root->val, temp, ans);
        temp.pop_back();
    }

public:
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int> temp;
        preorder(root, targetSum, temp, ans);
        return ans;
    }
};



// LeetCode - 437


class Solution {
    void preorder(TreeNode* root, int targetSum, vector<int> &temp,int& ans){
        if(!root)
            return;
        temp.push_back(root->val);
        long long sum = 0;
        for(int i = temp.size()-1; i>=0; i--){
            sum+=temp[i];
            if(sum == targetSum)
                ans++;
        }
        preorder(root->left, targetSum, temp, ans);
        preorder(root->right, targetSum, temp, ans);
        temp.pop_back();
    }
public:
    int pathSum(TreeNode* root, int targetSum) {
        int ans = 0;
        vector<int> temp;
        preorder(root, targetSum, temp, ans);
        return ans;
    }
};